
  ---						Each next subscribers receive...

Subject	      				...only upcoming values
BehaviorSubject				...one previous value and upcoming values
ReplaySubject				...all previous values and upcoming values
AsyncSubject				...the latest value when the stream will close

Refer for more:  http://reactivex.io/documentation/subject.html

  --- cloneDeep
import { cloneDeep } from 'lodash';
npm i lodash


  --- observableOf
import { of as observableOf } from 'rxjs';

export class MockStickyNotesFacade {
    public loadNotes() {
     return observableOf(cloneDeep(MockPatientNotes));
    }
}

  --- unsubscribing
  
private unsubscribe: Subject<void> = new Subject();

 this.someMethod
    .pipe(takeUntil(this.unsubscribe))
    .subscribe(
      // some operation
    );
	
ngOnDestroy() {
    this.unsubscribe.next();
    this.unsubscribe.complete();
  }
